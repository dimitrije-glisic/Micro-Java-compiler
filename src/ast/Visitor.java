// generated with ast extension for cup
// version 0.8
// 13/0/2020 9:44:4


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(DeclarationList DeclarationList);
    public void visit(Mulop Mulop);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(TermList TermList);
    public void visit(ConditionList ConditionList);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(StatementList StatementList);
    public void visit(VarPart VarPart);
    public void visit(FactorList FactorList);
    public void visit(Addop Addop);
    public void visit(ConstPart ConstPart);
    public void visit(ForCondition ForCondition);
    public void visit(Factor Factor);
    public void visit(IncDec IncDec);
    public void visit(VarList VarList);
    public void visit(FStatement FStatement);
    public void visit(ConstList ConstList);
    public void visit(EnumList EnumList);
    public void visit(BoolConst BoolConst);
    public void visit(ExprList ExprList);
    public void visit(ConditionFactorList ConditionFactorList);
    public void visit(Rhs rhs);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ForStatement ForStatement);
    public void visit(ActualPars ActualPars);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(EnumVar EnumVar);
    public void visit(DeclarationPart DeclarationPart);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ConditionFactor ConditionFactor);
    public void visit(ReturnTypeName ReturnTypeName);
    public void visit(SecondArg SecondArg);
    public void visit(ReadDesignator ReadDesignator);
    public void visit(FormPars FormPars);
    public void visit(Le Le);
    public void visit(Lt Lt);
    public void visit(Ge Ge);
    public void visit(Gt Gt);
    public void visit(Neq Neq);
    public void visit(Eq Eq);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Sub Sub);
    public void visit(Add Add);
    public void visit(ArrName ArrName);
    public void visit(ArrayDesignator ArrayDesignator);
    public void visit(SimpleDesignator SimpleDesignator);
    public void visit(NoExprs NoExprs);
    public void visit(Exprs Exprs);
    public void visit(ActualParamList ActualParamList);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(EndFuncCall EndFuncCall);
    public void visit(StartFuncCall StartFuncCall);
    public void visit(ParenthesisExpr ParenthesisExpr);
    public void visit(OperNew OperNew);
    public void visit(BoolRef BoolRef);
    public void visit(CharRef CharRef);
    public void visit(FuncCallExpr FuncCallExpr);
    public void visit(ArrRefIncDec ArrRefIncDec);
    public void visit(ArrRef ArrRef);
    public void visit(EnumRef EnumRef);
    public void visit(VarRefIncDec VarRefIncDec);
    public void visit(VarRef VarRef);
    public void visit(IntRef IntRef);
    public void visit(FuncCall FuncCall);
    public void visit(EndFactor EndFactor);
    public void visit(SimpleFactor SimpleFactor);
    public void visit(MulopFactor MulopFactor);
    public void visit(Term Term);
    public void visit(TermExpr TermExpr);
    public void visit(AddExpr AddExpr);
    public void visit(MinusExpr MinusExpr);
    public void visit(NormalExpr NormalExpr);
    public void visit(SimpleConditionFactor SimpleConditionFactor);
    public void visit(ConditionFactorWithRelop ConditionFactorWithRelop);
    public void visit(SimpleCondition SimpleCondition);
    public void visit(ConditionAnd ConditionAnd);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(SingleCondition SingleCondition);
    public void visit(ConditionOr ConditionOr);
    public void visit(Or Or);
    public void visit(Condition Condition);
    public void visit(Dec Dec);
    public void visit(Inc Inc);
    public void visit(NoSecArg NoSecArg);
    public void visit(SecArg SecArg);
    public void visit(ArrReadDesignator ArrReadDesignator);
    public void visit(VarReadDesignator VarReadDesignator);
    public void visit(AfterElseExpr AfterElseExpr);
    public void visit(Else Else);
    public void visit(Continue Continue);
    public void visit(Break Break);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(BlockStatement BlockStatement);
    public void visit(ProcCall ProcCall);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(ReadStmt ReadStmt);
    public void visit(PrintStmt PrintStmt);
    public void visit(ErrorStmt ErrorStmt);
    public void visit(ArrIncDecSt ArrIncDecSt);
    public void visit(VarIncDecSt VarIncDecSt);
    public void visit(ArrAsign ArrAsign);
    public void visit(VarAssign VarAssign);
    public void visit(ArrIncDec ArrIncDec);
    public void visit(VarIncDec VarIncDec);
    public void visit(ArrAsignment ArrAsignment);
    public void visit(VarAssignment VarAssignment);
    public void visit(NoFStatement NoFStatement);
    public void visit(FFuncCall FFuncCall);
    public void visit(FArrIncDec FArrIncDec);
    public void visit(FVarIncDec FVarIncDec);
    public void visit(FArrAsignment FArrAsignment);
    public void visit(FVarAssignment FVarAssignment);
    public void visit(ForCondErr ForCondErr);
    public void visit(NoForCond NoForCond);
    public void visit(ForCond ForCond);
    public void visit(StartFor StartFor);
    public void visit(EndFor EndFor);
    public void visit(RightSemi RightSemi);
    public void visit(LeftSemi LeftSemi);
    public void visit(For For);
    public void visit(ForStmnt ForStmnt);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmatchedStmt UnmatchedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(FormalParamErr FormalParamErr);
    public void visit(FormalArrParamDecl FormalArrParamDecl);
    public void visit(FormalSimpleParamDecl FormalSimpleParamDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(VoidRetType VoidRetType);
    public void visit(ReturnType ReturnType);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(VarPartComma VarPartComma);
    public void visit(VarPartErr VarPartErr);
    public void visit(ArrayId ArrayId);
    public void visit(VarId VarId);
    public void visit(VarOrArrayId VarOrArrayId);
    public void visit(VarIdlist VarIdlist);
    public void visit(VarDec VarDec);
    public void visit(False False);
    public void visit(True True);
    public void visit(BoolCnst BoolCnst);
    public void visit(CharConst CharConst);
    public void visit(IntConst IntConst);
    public void visit(ConstId ConstId);
    public void visit(ConstIdSimple ConstIdSimple);
    public void visit(ConstIdList ConstIdList);
    public void visit(ConstDecl ConstDecl);
    public void visit(EnumVarWithAssignment EnumVarWithAssignment);
    public void visit(SimpleEnumVar SimpleEnumVar);
    public void visit(EnumId EnumId);
    public void visit(EnumIdList EnumIdList);
    public void visit(EnumDecl EnumDecl);
    public void visit(EnumDeclaration EnumDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(Declarations Declarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
